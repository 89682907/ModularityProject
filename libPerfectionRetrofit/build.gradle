apply plugin: 'com.android.library'
apply from: "${rootDir}/gradle/baseModule.gradle"

android {
    defaultConfig {
        versionCode Integer.parseInt("${rootProject.ext.versionCode}")
        versionName "${rootProject.ext.versionName}"
    }

    lintOptions { // 消除lint警告
        abortOnError false
        checkReleaseBuilds false
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

}

apply plugin: 'maven'
uploadArchives {
    repositories.mavenDeployer {
        repository(url: rootProject.ext.repoUrl)
        pom.groupId = rootProject.ext.PROJ_LIB_GROUP
        pom.artifactId = rootProject.ext.modules.perfectionRetrofitInfo.artifactId
        pom.version = rootProject.ext.modules.perfectionRetrofitInfo.version
    }
}

dependencies {

    implementation deps.okhttp3.runtime
    implementation(deps.okhttp3.okhttp_logging_interceptor) {
        exclude(group: 'com.squareup.okhttp3', module: 'okhttp')
    }
    api deps.rxjava_3_runtime
    api(deps.rxjava_3_rxandroid) {
        exclude(group: 'io.reactivex.rxjava3', module: 'rxjava')
    }
    implementation(deps.retrofit.runtime) {
        exclude(group: 'com.squareup.okhttp3', module: 'okhttp')
    }
    implementation(deps.retrofit.rxjava_3_adapter) {
        exclude(group: 'io.reactivex.rxjava3', module: 'rxjava')
        exclude(group: 'com.squareup.retrofit2', module: 'retrofit')
    }
    implementation deps.retrofit.moshi_converter
    api deps.moshi.runtime
    api deps.moshi.moshi_kotlin
    api deps.conscrypt


}
apply from: "${rootDir}/gradle/uploadArchives.gradle"
