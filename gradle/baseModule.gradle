android {
    compileSdkVersion build_versions.compile_sdk
    buildToolsVersion build_versions.build_tools

    defaultConfig {
        minSdkVersion build_versions.min_sdk
        targetSdkVersion build_versions.target_sdk

        ndk {
            abiFilters "armeabi-v7a"
        }
//        if (rootProject.ext.abiX86) {
//            getNdkConfig().abiFilters.add("x86")
//        }
    }

    signingConfigs {
        debug {
            storeFile file("${rootDir}/file/key/debug.keystore")
        }
        release {
            if (rootProject.ext.develop) {
                storeFile file("${rootDir}/file/key/debug.keystore")
                storePassword rootProject.ext.storePasswordDebug
                keyAlias rootProject.ext.keyAliasDebug
                keyPassword rootProject.ext.keyPasswordDebug
            } else {//此处设置自己的签名
//                storeFile file(String.valueOf(System.getenv("ANDROID_KEYSTORE")))
//                storePassword System.getenv("ANDROID_KEYSTORE_PWD")
//                keyAlias System.getenv("ANDROID_KEYSTORE_ALIAS")
//                keyPassword System.getenv("ANDROID_KEYSTORE_KEY_PWD")
                storeFile file("${rootDir}/file/key/debug.keystore")
                storePassword rootProject.ext.storePasswordRelease
                keyAlias rootProject.ext.keyAliasRelease
                keyPassword rootProject.ext.keyPasswordRelease
            }
        }
    }

    buildTypes {
        debug {
            debuggable true
            jniDebuggable true
//            minifyEnabled false
//            shrinkResources false
            signingConfig signingConfigs.debug
//            proguardFiles getDefaultProguardFile('proguard-android.txt'), "${rootDir}/proguard-rules.pro"
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

//        beta.initWith(buildTypes.debug)
        beta {
            debuggable true
            jniDebuggable true
//            minifyEnabled false
//            shrinkResources false
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

//        release.initWith(buildTypes.debug)
        release {
            debuggable true
            jniDebuggable true
//            minifyEnabled true
//            shrinkResources true
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

    }


    packagingOptions {
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/LGPL2.1'
        exclude 'META-INF/gfprobe-provider.xml'
    }

    compileOptions {
        sourceCompatibility versions.java_version
        targetCompatibility versions.java_version
    }
}

dependencies {
    api fileTree(include: ['*.jar'], dir: 'libs')
}
apply from: "${rootDir}/gradle/excludeTask.gradle"
