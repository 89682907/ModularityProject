apply from: "${rootDir}/modules.gradle"
//初始化一些属性
rootProject.ext.set("pkgName", "com.modularity.project")

Properties localProperties = new Properties()
def localFile = new File("${rootDir}/local.properties")
if (localFile.canRead()) {
    localProperties.load(localFile.newDataInputStream())
    println "localProperties: " + localProperties
} else {
    println("not find local.properties !!!")
}

def developStr = localProperties.getProperty('develop')
def develop = (developStr == null ? false : Boolean.parseBoolean(developStr))
rootProject.ext.set("develop", develop)

//设置maven地址
def localRepoUrl = localProperties.getProperty('LOCAL_REPO_URL')
if (localRepoUrl != null && localRepoUrl != "") {
    rootProject.ext.set("repoUrl", localRepoUrl)
} else {
    rootProject.ext.set("repoUrl", "file://" + rootDir.absolutePath + "/maven")
}

//设置apk输出路径
def localApkPath = localProperties.getProperty('LOCAL_APK_PATH')
if (localApkPath != null && localApkPath != "") {
    rootProject.ext.set("apkPath", localApkPath)
}


Properties params = new Properties()
def propFile = new File("${rootDir}/file/params.properties")
if (propFile.canRead()) {
    params.load(new InputStreamReader(new FileInputStream(propFile), "UTF-8"))
    println "params: " + params

    rootProject.ext.set("versionCode", params.versionCode)
    rootProject.ext.set("versionName", params.versionName)

    String fixName = ""
    if (develop) {
        fixName = "Dv"
    }
    rootProject.ext.set("APP_NAME_DEBUG", fixName + params.APP_NAME_DEBUG)
    rootProject.ext.set("APP_NAME_BETA", fixName + params.APP_NAME_BETA)
    rootProject.ext.set("APP_NAME_RELEASE", fixName + params.APP_NAME_RELEASE)

    String fixPkgName = ""
    if (develop) {
        fixPkgName += ".develop"
    }
    rootProject.ext.set("PKG_FIX_NAME_DEBUG", fixPkgName + ".debug")
    rootProject.ext.set("PKG_FIX_NAME_BETA", fixPkgName + ".beta")
    rootProject.ext.set("PKG_FIX_NAME_RELEASE", fixPkgName)

    rootProject.ext.set("PROJ_LIB_GROUP", rootProject.ext.pkgName + fixPkgName + ".lib")
    rootProject.ext.set("PROJ_MOD_GROUP", rootProject.ext.pkgName + fixPkgName + ".mod")
} else {
    println("not find params.properties")
}

initModuleInfo()
def moduleList = rootProject.ext.MODULE_INFO_LIST
if (moduleList != null) {
    moduleList.each { moduleInfo ->
        def GROUP_ID = moduleInfo.isLib ? rootProject.ext.PROJ_LIB_GROUP : rootProject.ext.PROJ_MOD_GROUP
        rootProject.ext.set(moduleInfo.name, "${GROUP_ID}:${moduleInfo.artifactId}:${moduleInfo.version}")
    }
}

//SHADOW
//SHADOW END
