apply plugin: 'com.android.application'
apply from: "${rootDir}/gradle/baseModule.gradle"
apply from: "${rootDir}/gradle/processResourceAndManifest.gradle"
apply from: "${rootDir}/gradle/generateApk.gradle"
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'

android {
    defaultConfig {
        applicationId rootProject.ext.pkgName
        versionCode Integer.parseInt("${rootProject.ext.versionCode}")
        versionName "${rootProject.ext.versionName}"
        buildConfigField "boolean", "DEVELOP", "${rootProject.ext.develop}"
        multiDexEnabled true
    }

    buildTypes {
        debug {
            applicationIdSuffix rootProject.ext.PKG_FIX_NAME_DEBUG
            minifyEnabled !rootProject.ext.develop
            shrinkResources !rootProject.ext.develop
            signingConfig signingConfigs.debug
            buildConfigField "String", "APP_NAME", "\"${rootProject.ext.APP_NAME_DEBUG}\""
            buildConfigField "String", "PACKAGE_FIX_NAME", "\"${rootProject.ext.PKG_FIX_NAME_DEBUG}\""

        }

        beta.initWith(buildTypes.debug)
        beta {
            applicationIdSuffix rootProject.ext.PKG_FIX_NAME_BETA
            signingConfig signingConfigs.release
            buildConfigField "String", "APP_NAME", "\"${rootProject.ext.APP_NAME_BETA}\""
            buildConfigField "String", "PACKAGE_FIX_NAME", "\"${rootProject.ext.PKG_FIX_NAME_BETA}\""
        }

        release.initWith(buildTypes.debug)
        release {
            applicationIdSuffix rootProject.ext.PKG_FIX_NAME_RELEASE
            signingConfig signingConfigs.release
            buildConfigField "String", "APP_NAME", "\"${rootProject.ext.APP_NAME_RELEASE}\""
            buildConfigField "String", "PACKAGE_FIX_NAME", "\"${rootProject.ext.PKG_FIX_NAME_RELEASE}\""
        }

    }

    //多渠道控制
    flavorDimensions "channel"
    productFlavors {
        standard { manifestPlaceholders = [UMENG_CHANNEL_VALUE: "_standard"] }
        baidu { manifestPlaceholders = [UMENG_CHANNEL_VALUE: "_baidu"] }
        yingyongbao { manifestPlaceholders = [UMENG_CHANNEL_VALUE: "_yingyongbao"] }
    }
    // 集成DataBinding
    buildFeatures {
        dataBinding = true
//        viewBinding = true
    }
}


dependencies {
    api project(':libCommon')
    if (rootProject.ext.isModule) {
        implementation project(':modModuleA')
        implementation project(':modModuleB')
        implementation project(':mvvmModel')
        implementation project(':libFaceRecognition')
        implementation project(':libSignature')
        implementation project(':modJetpack')
        implementation project(':libJsBridge')
        implementation project(':libCamera')
    } else {
        implementation "${rootProject.ext.modModuleA}"
        implementation "${rootProject.ext.modModuleB}"
        implementation "${rootProject.ext.mvvmModel}"
        implementation "${rootProject.ext.libFaceRecognition}"
        implementation "${rootProject.ext.libSignature}"
        implementation "${rootProject.ext.modJetpack}"
        implementation "${rootProject.ext.libJsBridge}"
        implementation "${rootProject.ext.libCamera}"
    }
    kapt deps.glide.glide_compiler //编译器必须在主Application模块中
    configurations.all {
        resolutionStrategy.eachDependency { DependencyResolveDetails details ->
            def requested = details.requested
            if (requested.group == "androidx.appcompat") {
                if (!requested.name.startsWith("multidex")) {
                    details.useVersion "1.+"
                }
            }
        }
    }
}


